$date
	Mon Jun  1 20:58:35 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbenchCPU $end
$var wire 1 ! memWriteEn $end
$var wire 1 " memReadEn $end
$var wire 8 # WRITE_DATA [7:0] $end
$var wire 8 $ READ_DATA [7:0] $end
$var wire 32 % PC [31:0] $end
$var wire 32 & INS [31:0] $end
$var wire 1 ' BUSY_WAIT $end
$var wire 8 ( ADDRESS [7:0] $end
$var reg 1 ) CLK $end
$var reg 1 * RESET $end
$scope module myDataMemory $end
$var wire 1 ) clock $end
$var wire 1 * reset $end
$var wire 8 + writedata [7:0] $end
$var wire 1 ! write $end
$var wire 1 " read $end
$var wire 8 , address [7:0] $end
$var reg 1 ' busywait $end
$var reg 1 - readaccess $end
$var reg 8 . readdata [7:0] $end
$var reg 1 / writeaccess $end
$var integer 32 0 i [31:0] $end
$upscope $end
$scope module mycpu $end
$var wire 8 1 ALOP2 [7:0] $end
$var wire 1 2 ANDOUTBEQ $end
$var wire 1 3 ANDOUTBNE $end
$var wire 1 ' BUSY_WAIT $end
$var wire 1 ) CLK $end
$var wire 32 4 INSTRUCTION [31:0] $end
$var wire 8 5 MEMREAD [7:0] $end
$var wire 1 * RESET $end
$var wire 1 6 jumpMUXSEL $end
$var wire 1 7 regWRITEEN_FIN $end
$var wire 1 8 twoscompMUXSEL $end
$var wire 1 9 regWRITEEN $end
$var wire 1 ! memWriteEn $end
$var wire 1 " memReadEn $end
$var wire 1 : memMUXSEL $end
$var wire 1 ; jump $end
$var wire 1 < immeMUXSEL $end
$var wire 1 = bne $end
$var wire 1 > beq $end
$var wire 2 ? bShifterOpCode [1:0] $end
$var wire 1 @ alu_shiftMUXSEL $end
$var wire 3 A aluOP [2:0] $end
$var wire 8 B TWOSMUXOUT [7:0] $end
$var wire 8 C TWOSCOMPOUT [7:0] $end
$var wire 8 D SOURCE2 [7:0] $end
$var wire 8 E SOURCE1 [7:0] $end
$var wire 8 F REGSAVE [7:0] $end
$var wire 8 G REGOUT2 [7:0] $end
$var wire 8 H REGOUT1 [7:0] $end
$var wire 8 I PREV_ALU_BARREL_OUT [7:0] $end
$var wire 32 J PCNEXT [31:0] $end
$var wire 32 K PCJUMP [31:0] $end
$var wire 32 L PCINCBY4 [31:0] $end
$var wire 8 M OP [7:0] $end
$var wire 8 N DESTINATION [7:0] $end
$var wire 8 O BARRELOUT [7:0] $end
$var wire 8 P ALUOUT [7:0] $end
$var wire 1 Q ALUCOMP $end
$var wire 8 R ALOP1 [7:0] $end
$var reg 32 S PC [31:0] $end
$scope module bs $end
$var wire 8 T INPUT [7:0] $end
$var wire 1 U TMP7 $end
$var wire 1 V TMP6 $end
$var wire 1 W TMP5 $end
$var wire 1 X TMP4 $end
$var wire 1 Y TMP3 $end
$var wire 1 Z TMP2 $end
$var wire 1 [ TMP1 $end
$var wire 2 \ SHIFT_MODE [1:0] $end
$var wire 8 ] SHIFT [7:0] $end
$var wire 8 ^ OUTPUT [7:0] $end
$var wire 8 _ OUTINTER [7:0] $end
$var wire 8 ` INTER2 [7:0] $end
$var wire 8 a INTER1 [7:0] $end
$var wire 8 b INNER3 [7:0] $end
$var wire 8 c ININTER [7:0] $end
$var reg 8 d LAYER4_IN [7:0] $end
$var reg 1 e SHIFT_DIR $end
$scope module inmux $end
$var wire 8 f INPUT1 [7:0] $end
$var wire 8 g INPUT2 [7:0] $end
$var wire 1 e SELECT $end
$var reg 8 h RESULT [7:0] $end
$upscope $end
$scope module m0 $end
$var wire 1 i INPUT1 $end
$var wire 1 j SELECT $end
$var wire 1 [ INPUT2 $end
$var reg 1 k RESULT $end
$upscope $end
$scope module m00 $end
$var wire 1 l INPUT1 $end
$var wire 1 m SELECT $end
$var wire 1 Z INPUT2 $end
$var reg 1 n RESULT $end
$upscope $end
$scope module m000 $end
$var wire 1 o INPUT1 $end
$var wire 1 p SELECT $end
$var wire 1 X INPUT2 $end
$var reg 1 q RESULT $end
$upscope $end
$scope module m0000 $end
$var wire 8 r INPUT1 [7:0] $end
$var wire 8 s INPUT2 [7:0] $end
$var wire 1 t SELECT $end
$var reg 8 u RESULT [7:0] $end
$upscope $end
$scope module m1 $end
$var wire 1 v INPUT1 $end
$var wire 1 w INPUT2 $end
$var wire 1 x SELECT $end
$var reg 1 y RESULT $end
$upscope $end
$scope module m11 $end
$var wire 1 z INPUT1 $end
$var wire 1 { SELECT $end
$var wire 1 Y INPUT2 $end
$var reg 1 | RESULT $end
$upscope $end
$scope module m111 $end
$var wire 1 } INPUT1 $end
$var wire 1 ~ SELECT $end
$var wire 1 W INPUT2 $end
$var reg 1 !" RESULT $end
$upscope $end
$scope module m2 $end
$var wire 1 "" INPUT1 $end
$var wire 1 #" INPUT2 $end
$var wire 1 $" SELECT $end
$var reg 1 %" RESULT $end
$upscope $end
$scope module m22 $end
$var wire 1 &" INPUT1 $end
$var wire 1 '" INPUT2 $end
$var wire 1 (" SELECT $end
$var reg 1 )" RESULT $end
$upscope $end
$scope module m222 $end
$var wire 1 *" INPUT1 $end
$var wire 1 +" SELECT $end
$var wire 1 V INPUT2 $end
$var reg 1 ," RESULT $end
$upscope $end
$scope module m3 $end
$var wire 1 -" INPUT1 $end
$var wire 1 ." INPUT2 $end
$var wire 1 /" SELECT $end
$var reg 1 0" RESULT $end
$upscope $end
$scope module m33 $end
$var wire 1 1" INPUT1 $end
$var wire 1 2" INPUT2 $end
$var wire 1 3" SELECT $end
$var reg 1 4" RESULT $end
$upscope $end
$scope module m333 $end
$var wire 1 5" INPUT1 $end
$var wire 1 6" SELECT $end
$var wire 1 U INPUT2 $end
$var reg 1 7" RESULT $end
$upscope $end
$scope module m4 $end
$var wire 1 8" INPUT1 $end
$var wire 1 9" INPUT2 $end
$var wire 1 :" SELECT $end
$var reg 1 ;" RESULT $end
$upscope $end
$scope module m44 $end
$var wire 1 <" INPUT1 $end
$var wire 1 =" INPUT2 $end
$var wire 1 >" SELECT $end
$var reg 1 ?" RESULT $end
$upscope $end
$scope module m444 $end
$var wire 1 @" INPUT1 $end
$var wire 1 A" INPUT2 $end
$var wire 1 B" SELECT $end
$var reg 1 C" RESULT $end
$upscope $end
$scope module m5 $end
$var wire 1 D" INPUT1 $end
$var wire 1 E" INPUT2 $end
$var wire 1 F" SELECT $end
$var reg 1 G" RESULT $end
$upscope $end
$scope module m55 $end
$var wire 1 H" INPUT1 $end
$var wire 1 I" INPUT2 $end
$var wire 1 J" SELECT $end
$var reg 1 K" RESULT $end
$upscope $end
$scope module m555 $end
$var wire 1 L" INPUT1 $end
$var wire 1 M" INPUT2 $end
$var wire 1 N" SELECT $end
$var reg 1 O" RESULT $end
$upscope $end
$scope module m6 $end
$var wire 1 P" INPUT1 $end
$var wire 1 Q" INPUT2 $end
$var wire 1 R" SELECT $end
$var reg 1 S" RESULT $end
$upscope $end
$scope module m66 $end
$var wire 1 T" INPUT1 $end
$var wire 1 U" INPUT2 $end
$var wire 1 V" SELECT $end
$var reg 1 W" RESULT $end
$upscope $end
$scope module m666 $end
$var wire 1 X" INPUT1 $end
$var wire 1 Y" INPUT2 $end
$var wire 1 Z" SELECT $end
$var reg 1 [" RESULT $end
$upscope $end
$scope module m7 $end
$var wire 1 \" INPUT1 $end
$var wire 1 ]" INPUT2 $end
$var wire 1 ^" SELECT $end
$var reg 1 _" RESULT $end
$upscope $end
$scope module m77 $end
$var wire 1 `" INPUT1 $end
$var wire 1 a" INPUT2 $end
$var wire 1 b" SELECT $end
$var reg 1 c" RESULT $end
$upscope $end
$scope module m777 $end
$var wire 1 d" INPUT1 $end
$var wire 1 e" INPUT2 $end
$var wire 1 f" SELECT $end
$var reg 1 g" RESULT $end
$upscope $end
$scope module mt1 $end
$var wire 1 h" INPUT1 $end
$var wire 1 i" INPUT2 $end
$var wire 1 j" INPUT3 $end
$var wire 1 k" INPUT4 $end
$var wire 2 l" SELECT [1:0] $end
$var reg 1 [ RESULT $end
$upscope $end
$scope module mt2 $end
$var wire 1 m" INPUT1 $end
$var wire 1 n" INPUT2 $end
$var wire 1 o" INPUT3 $end
$var wire 1 p" INPUT4 $end
$var wire 2 q" SELECT [1:0] $end
$var reg 1 Z RESULT $end
$upscope $end
$scope module mt3 $end
$var wire 1 r" INPUT1 $end
$var wire 1 s" INPUT2 $end
$var wire 1 t" INPUT3 $end
$var wire 1 u" INPUT4 $end
$var wire 2 v" SELECT [1:0] $end
$var reg 1 Y RESULT $end
$upscope $end
$scope module mt4 $end
$var wire 1 w" INPUT1 $end
$var wire 1 x" INPUT2 $end
$var wire 1 y" INPUT3 $end
$var wire 1 z" INPUT4 $end
$var wire 2 {" SELECT [1:0] $end
$var reg 1 X RESULT $end
$upscope $end
$scope module mt5 $end
$var wire 1 |" INPUT1 $end
$var wire 1 }" INPUT2 $end
$var wire 1 ~" INPUT3 $end
$var wire 1 !# INPUT4 $end
$var wire 2 "# SELECT [1:0] $end
$var reg 1 W RESULT $end
$upscope $end
$scope module mt6 $end
$var wire 1 ## INPUT1 $end
$var wire 1 $# INPUT2 $end
$var wire 1 %# INPUT3 $end
$var wire 1 &# INPUT4 $end
$var wire 2 '# SELECT [1:0] $end
$var reg 1 V RESULT $end
$upscope $end
$scope module mt7 $end
$var wire 1 (# INPUT1 $end
$var wire 1 )# INPUT2 $end
$var wire 1 *# INPUT3 $end
$var wire 1 +# INPUT4 $end
$var wire 2 ,# SELECT [1:0] $end
$var reg 1 U RESULT $end
$upscope $end
$scope module outmux $end
$var wire 8 -# INPUT1 [7:0] $end
$var wire 8 .# INPUT2 [7:0] $end
$var wire 1 e SELECT $end
$var reg 8 /# RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module jumpadder $end
$var wire 32 0# INPUT2 [31:0] $end
$var wire 32 1# INPUT1 [31:0] $end
$var reg 32 2# RESULT [31:0] $end
$upscope $end
$scope module muMem $end
$var wire 8 3# INPUT2 [7:0] $end
$var wire 1 : SELECT $end
$var wire 8 4# INPUT1 [7:0] $end
$var reg 8 5# RESULT [7:0] $end
$upscope $end
$scope module muxFin $end
$var wire 8 6# INPUT2 [7:0] $end
$var wire 1 @ SELECT $end
$var wire 8 7# INPUT1 [7:0] $end
$var reg 8 8# RESULT [7:0] $end
$upscope $end
$scope module muximme $end
$var wire 8 9# INPUT2 [7:0] $end
$var wire 1 < SELECT $end
$var wire 8 :# INPUT1 [7:0] $end
$var reg 8 ;# RESULT [7:0] $end
$upscope $end
$scope module muxjump $end
$var wire 32 <# INPUT2 [31:0] $end
$var wire 1 6 SELECT $end
$var wire 32 =# INPUT1 [31:0] $end
$var reg 32 ># RESULT [31:0] $end
$upscope $end
$scope module muxtwos $end
$var wire 1 8 SELECT $end
$var wire 8 ?# INPUT2 [7:0] $end
$var wire 8 @# INPUT1 [7:0] $end
$var reg 8 A# RESULT [7:0] $end
$upscope $end
$scope module myadder $end
$var wire 32 B# INPUT1 [31:0] $end
$var wire 32 C# INPUT2 [31:0] $end
$var reg 32 D# RESULT [31:0] $end
$upscope $end
$scope module myalu $end
$var wire 1 Q COMP $end
$var wire 8 E# DATA1 [7:0] $end
$var wire 8 F# DATA2 [7:0] $end
$var wire 3 G# SELECT [2:0] $end
$var wire 8 H# MULRESULT [7:0] $end
$var reg 8 I# RESULT [7:0] $end
$scope module mul $end
$var wire 8 J# DATA1 [7:0] $end
$var wire 8 K# DATA2 [7:0] $end
$var wire 8 L# SHIFT7 [7:0] $end
$var wire 8 M# SHIFT6 [7:0] $end
$var wire 8 N# SHIFT5 [7:0] $end
$var wire 8 O# SHIFT4 [7:0] $end
$var wire 8 P# SHIFT3 [7:0] $end
$var wire 8 Q# SHIFT2 [7:0] $end
$var wire 8 R# SHIFT1 [7:0] $end
$var wire 8 S# SHIFT0 [7:0] $end
$var reg 8 T# RES0 [7:0] $end
$var reg 8 U# RES1 [7:0] $end
$var reg 8 V# RES2 [7:0] $end
$var reg 8 W# RES3 [7:0] $end
$var reg 8 X# RES4 [7:0] $end
$var reg 8 Y# RES5 [7:0] $end
$var reg 8 Z# RES6 [7:0] $end
$var reg 8 [# RES7 [7:0] $end
$var reg 8 \# RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module mycu $end
$var wire 1 ]# ALUCOMP $end
$var wire 8 ^# OP [7:0] $end
$var wire 1 * RESET $end
$var reg 3 _# aluOP [2:0] $end
$var reg 1 @ alu_shiftMUXSEL $end
$var reg 2 `# bShifterOpCode [1:0] $end
$var reg 1 > beq $end
$var reg 1 = bne $end
$var reg 1 < immeMUXSEL $end
$var reg 1 ; jump $end
$var reg 1 : memMUXSEL $end
$var reg 1 " memReadEn $end
$var reg 1 ! memWriteEn $end
$var reg 1 9 regWRITEEN $end
$var reg 1 8 twoscompMUXSEL $end
$upscope $end
$scope module myreg $end
$var wire 1 ) CLK $end
$var wire 8 a# IN [7:0] $end
$var wire 3 b# INADDRESS [2:0] $end
$var wire 8 c# OUT1 [7:0] $end
$var wire 3 d# OUT1ADDRESS [2:0] $end
$var wire 8 e# OUT2 [7:0] $end
$var wire 3 f# OUT2ADDRESS [2:0] $end
$var wire 1 * RESET $end
$var wire 1 7 WRITE $end
$var integer 32 g# i [31:0] $end
$upscope $end
$scope module twos $end
$var wire 8 h# INPUT [7:0] $end
$var reg 8 i# RESULT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
z]#
bx \#
b0 [#
b0 Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b0 U#
b0 T#
bx S#
bx0 R#
bx00 Q#
bx000 P#
bx0000 O#
bx00000 N#
bx000000 M#
bx0000000 L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
b100 C#
b11111111111111111111111111111100 B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx00 0#
bx /#
bx .#
bx -#
bx ,#
0+#
x*#
x)#
0(#
bx '#
0&#
x%#
x$#
0##
bx "#
0!#
x~"
x}"
0|"
bx {"
0z"
xy"
xx"
0w"
bx v"
0u"
xt"
xs"
0r"
bx q"
0p"
xo"
xn"
0m"
bx l"
0k"
xj"
xi"
0h"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
0["
xZ"
0Y"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
0O"
xN"
0M"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
0C"
xB"
0A"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
07"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
0,"
x+"
0*"
0)"
x("
0'"
x&"
x%"
x$"
x#"
x""
0!"
x~
0}
0|
x{
xz
xy
xx
xw
xv
bx u
xt
bx s
bx0000000 r
0q
xp
0o
0n
xm
0l
0k
xj
xi
bx h
bx g
bx f
xe
bx d
bx c
bx0000000 b
bx0 a
bx000 `
bx _
bx ^
bx ]
bx \
0[
0Z
0Y
0X
0W
0V
0U
bx T
b11111111111111111111111111111100 S
bx R
xQ
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
x@
bx ?
0>
0=
x<
0;
x:
x9
x8
x7
06
bx 5
bx 4
03
02
bx 1
b100000000 0
0/
bx .
0-
bx ,
bx +
1*
1)
bx (
0'
bx &
b11111111111111111111111111111100 %
bx $
bx #
x"
x!
$end
#1
0*
#2
b0 J
b0 >#
b1000 g#
b0 L
b0 1#
b0 =#
b0 D#
#3
1Q
b0 (
b0 ,
b0 P
b0 7#
b0 I#
b0 H#
b0 \#
#4
0)
#8
1)
#9
b0 %
b0 S
b0 B#
#11
x,"
x*"
xY"
bx00 `
x)"
xl
x'"
1t
x["
xO"
xC"
bx00 b
bx00 r
x7"
bx a
xk
b0 d#
0f"
0Z"
0N"
0B"
06"
0+"
0~
0p
1b"
1V"
1J"
1>"
13"
1("
1{
1m
0^"
0R"
0F"
0:"
0/"
0$"
0x
0j
bx000 W#
bx0 U#
b0 b#
b0 E
b1010 R
b1010 ]
b1010 ;#
b1010 F#
b1010 K#
b10 f#
b100 J
b100 >#
b0 0#
b0 N
b1010 D
b1010 9#
b101 M
b101 ^#
b100 L
b100 1#
b100 =#
b100 D#
b101000000000000000000001010 &
b101000000000000000000001010 4
#12
b0 O
b0 ^
b0 /#
b0 6#
b0 .#
b0 _
b0 u
b0 -#
b0 F
b0 5#
b0 a#
b0 I
b0 4#
b0 8#
17
b0 d
b0 s
1e
0"
0!
0:
b0 ?
b0 \
b0 l"
b0 q"
b0 v"
b0 {"
b0 "#
b0 '#
b0 ,#
b0 `#
0@
b0 A
b0 G#
b0 _#
19
1<
08
0)
#13
0O"
0C"
07"
0g"
0,"
b0 b
b0 r
0["
0d"
0*#
0X"
0%#
0L"
0~"
0@"
0y"
05"
0e"
0*"
0Y"
0c"
0W"
0K"
0?"
04"
b0 `
0)"
0`"
0t"
0T"
0o"
0H"
0a"
0<"
0U"
01"
0I"
0&"
0="
0z
02"
0l
0'"
0_"
0S"
0G"
0;"
00"
0%"
0y
b0 a
0k
0Q
0]"
0\"
0Q"
0P"
0E"
0D"
09"
08"
0."
0-"
0#"
0""
0w
0v
0i
0j"
b1010 F
b1010 5#
b1010 a#
b0 c
b0 h
b0 W#
b0 U#
b1010 I
b1010 4#
b1010 8#
0i"
0n"
0s"
0x"
0}"
0$#
0)#
b0 g
b0 S#
b0 R#
b0 Q#
b0 P#
b0 O#
b0 N#
b0 M#
b0 L#
b0 B
b0 :#
b0 A#
b1010 (
b1010 ,
b1010 P
b1010 7#
b1010 I#
b0 1
b0 T
b0 f
b0 E#
b0 J#
b0 #
b0 +
b0 H
b0 c#
b0 G
b0 @#
b0 e#
b0 h#
b100 K
b100 2#
b100 <#
#14
b0 C
b0 ?#
b0 i#
#16
1)
#17
b100 %
b100 S
b100 B#
#19
b1 O
b1 ^
b1 /#
b1 6#
b1 .#
b10000000 _
b10000000 u
b10000000 -#
b10000000 b
b10000000 r
1g"
0t
1d"
1*#
b10000000 `
1c"
1`"
1t"
1H"
1a"
1_"
b10100000 a
1G"
1]"
1P"
1E"
18"
1^"
1R"
1F"
1:"
1/"
1$"
1x
1j
b1010000 c
b1010000 h
b10100 U#
b1010 T#
b11 R
b11 ]
b11 ;#
b11 F#
b11 K#
b11 f#
b1000 J
b1000 >#
b1010000 g
b1010 S#
b10100 R#
b101000 Q#
b1010000 P#
b10100000 O#
b1000000 N#
b10000000 M#
b11 D
b11 9#
b10001 M
b10001 ^#
b1000 L
b1000 1#
b1000 =#
b1000 D#
b1010 1
b1010 T
b1010 f
b1010 E#
b1010 J#
b1010 #
b1010 +
b1010 H
b1010 c#
b10001000000000000000000000011 &
b10001000000000000000000000011 4
#20
b11 F
b11 5#
b11 a#
1/
1'
07
b11 I
b11 4#
b11 8#
1!
09
b11 (
b11 ,
b11 P
b11 7#
b11 I#
0)
#21
b1000 K
b1000 2#
b1000 <#
#22
b11110 H#
b11110 \#
#24
1)
#28
0)
#32
1)
#36
0)
#40
1)
#44
0)
#48
1)
#52
0)
#56
1)
#60
0)
#64
1)
0/
0'
#65
b1000 %
b1000 S
b1000 B#
#67
b1 b#
b1100 J
b1100 >#
b100 0#
b1 N
b1111 M
b1111 ^#
b1100 L
b1100 1#
b1100 =#
b1100 D#
b1111000000010000000000000011 &
b1111000000010000000000000011 4
#68
1-
1'
bx F
bx 5#
bx a#
07
1"
0!
1:
19
0)
#69
b10000 K
b10000 2#
b10000 <#
#72
1)
#76
0)
#80
1)
#84
0)
#88
1)
#92
0)
#96
1)
#100
0)
#104
1)
#108
0)
#112
17
b1010 F
b1010 5#
b1010 a#
1)
0-
0'
b1010 $
b1010 .
b1010 5
b1010 3#
#113
b1100 %
b1100 S
b1100 B#
#115
b10 b#
b10000 J
b10000 >#
b1000 0#
b10 N
b101 M
b101 ^#
b10000 L
b10000 1#
b10000 =#
b10000 D#
b101000000100000000000000011 &
b101000000100000000000000011 4
#116
b11 F
b11 5#
b11 a#
0"
0:
0)
#117
b11000 K
b11000 2#
b11000 <#
#120
1)
#121
b10000 %
b10000 S
b10000 B#
#123
0g"
b1000000 b
b1000000 r
1["
0d"
0*#
1X"
1%#
b0 O
b0 ^
b0 /#
b0 6#
b0 .#
0c"
b1000000 `
1W"
b0 _
b0 u
b0 -#
0`"
0t"
1T"
1o"
0H"
0a"
1<"
1U"
1t
0_"
1S"
0G"
b1010000 a
1;"
0^"
0R"
0F"
0:"
0/"
0$"
0x
0j
b1000000 Y#
b1010000 W#
b0 T#
b11 b#
b10101010 R
b10101010 ]
b10101010 ;#
b10101010 F#
b10101010 K#
b10 f#
b10100 J
b10100 >#
b1100 0#
b11 N
b10101010 D
b10101010 9#
b10100 L
b10100 1#
b10100 =#
b10100 D#
b101000000110000000010101010 &
b101000000110000000010101010 4
#124
b10101010 F
b10101010 5#
b10101010 a#
b10101010 I
b10101010 4#
b10101010 8#
b10101010 (
b10101010 ,
b10101010 P
b10101010 7#
b10101010 I#
0)
#125
b11 B
b11 :#
b11 A#
b11 G
b11 @#
b11 e#
b11 h#
b100000 K
b100000 2#
b100000 <#
#126
b11111101 C
b11111101 ?#
b11111101 i#
b10100100 H#
b10100100 \#
#128
1)
#129
b10100 %
b10100 S
b10100 B#
#131
b10 O
b10 ^
b10 /#
b10 6#
b10 .#
b1000000 _
b1000000 u
b1000000 -#
0t
b11 d#
b0 Y#
b0 W#
b0 b#
b11 E
b10 R
b10 ]
b10 ;#
b10 F#
b10 K#
b11000 J
b11000 >#
b0 0#
b0 N
b10 D
b10 9#
b10000 M
b10000 ^#
b11000 L
b11000 1#
b11000 =#
b11000 D#
b10000000000000000001100000010 &
b10000000000000000001100000010 4
#132
b1 O
b1 ^
b1 /#
b1 6#
b1 .#
b10000000 _
b10000000 u
b10000000 -#
1g"
b10000000 b
b10000000 r
0["
1d"
1*#
0X"
0%#
1c"
b10000000 `
0W"
1`"
1t"
0T"
0o"
1H"
1a"
0<"
0U"
1_"
0S"
1G"
b10100000 a
0;"
b10 F
b10 5#
b10 a#
1^"
1R"
1F"
1:"
1/"
1$"
1x
1j
b1010 T#
b10 I
b10 4#
b10 8#
1/
1'
07
b11 R
b11 ]
b11 ;#
b11 F#
b11 K#
b10 (
b10 ,
b10 P
b10 7#
b10 I#
1!
09
0<
0)
#133
b10101 O
b10101 ^
b10101 /#
b10101 6#
b10101 .#
b10101000 _
b10101000 u
b10101000 -#
1O"
b10101000 b
b10101000 r
17"
1L"
1~"
15"
1e"
1K"
b10101000 `
14"
11"
1I"
1z
12"
10"
b10101010 a
1y
1."
1""
1w
1i
b11 F
b11 5#
b11 a#
b1010101 c
b1010101 h
b1010100 U#
b10101010 T#
b11 I
b11 4#
b11 8#
1i"
1n"
1s"
1x"
1}"
1$#
1)#
b1010101 g
b10101010 S#
b1010100 R#
b10101000 Q#
b11 (
b11 ,
b11 P
b11 7#
b11 I#
b10101010 1
b10101010 T
b10101010 f
b10101010 E#
b10101010 J#
b10101010 #
b10101010 +
b10101010 H
b10101010 c#
b11000 K
b11000 2#
b11000 <#
#134
b11111110 H#
b11111110 \#
#136
1)
#140
0)
#144
1)
#148
0)
#152
1)
#156
0)
#160
1)
#164
0)
#168
1)
#172
0)
#176
1)
0/
0'
#177
b11000 %
b11000 S
b11000 B#
#179
b0 d#
b100 b#
b0 E
b11100 J
b11100 >#
b10000 0#
b100 N
b1110 M
b1110 ^#
b11100 L
b11100 1#
b11100 =#
b11100 D#
b1110000001000000000000000010 &
b1110000001000000000000000010 4
#180
1-
1'
b1010 F
b1010 5#
b1010 a#
07
1"
0!
1:
19
0)
#181
b1 O
b1 ^
b1 /#
b1 6#
b1 .#
b10000000 _
b10000000 u
b10000000 -#
0O"
b10000000 b
b10000000 r
07"
0L"
0~"
05"
0e"
0K"
b10000000 `
04"
01"
0I"
0z
02"
00"
b10100000 a
0y
0."
0""
0w
0i
b1010000 c
b1010000 h
b10100 U#
b1010 T#
0i"
0n"
0s"
0x"
0}"
0$#
0)#
b1010000 g
b1010 S#
b10100 R#
b101000 Q#
b1010 1
b1010 T
b1010 f
b1010 E#
b1010 J#
b1010 #
b1010 +
b1010 H
b1010 c#
b101100 K
b101100 2#
b101100 <#
#184
b11110 H#
b11110 \#
1)
#188
0)
#192
1)
#196
0)
#200
1)
#204
0)
#208
1)
#212
0)
#216
1)
#220
0)
#224
17
b10101010 F
b10101010 5#
b10101010 a#
1)
0-
0'
b10101010 $
b10101010 .
b10101010 5
b10101010 3#
#225
b11100 %
b11100 S
b11100 B#
#227
bx d#
bx b#
bx E
bx f#
b100000 J
b100000 >#
bx00 0#
bx N
bx D
bx 9#
bx M
bx ^#
b100000 L
b100000 1#
b100000 =#
b100000 D#
bx &
bx 4
#228
0)
#229
xd"
x*#
xX"
x%#
xL"
x~"
x@"
xy"
x5"
xe"
b0 O
b0 ^
b0 /#
b0 6#
b0 .#
xc"
xW"
xK"
x?"
bx000 `
x4"
b0 _
b0 u
b0 -#
x`"
xt"
xT"
xo"
xH"
xa"
x<"
xU"
x1"
xI"
x&"
x="
xz
x2"
xt
bx0000000 b
bx0000000 r
xg"
x_"
xS"
xG"
x;"
x0"
x%"
bx0 a
xy
x]"
x\"
xQ"
xP"
xE"
xD"
x9"
x8"
x."
x-"
x#"
x""
xw
xv
xi
xj"
xf"
xZ"
xN"
xB"
x6"
x+"
x~
xp
xb"
xV"
xJ"
x>"
x3"
x("
x{
xm
x^"
xR"
xF"
x:"
x/"
x$"
xx
xj
bx c
bx h
b0 U#
b0 T#
bx R
bx ]
bx ;#
bx F#
bx K#
xi"
xn"
xs"
xx"
x}"
x$#
x)#
bx g
bx S#
bx0 R#
bx00 Q#
bx000 P#
bx0000 O#
bx00000 N#
bx000000 M#
bx0000000 L#
bx B
bx :#
bx A#
bx 1
bx T
bx f
bx E#
bx J#
bx #
bx +
bx H
bx c#
bx G
bx @#
bx e#
bx h#
bx K
bx 2#
bx <#
#230
xQ
bx I
bx 4#
bx 8#
bx (
bx ,
bx P
bx 7#
bx I#
bx C
bx ?#
bx i#
#232
b0 H#
b0 \#
1)
#233
b100000 %
b100000 S
b100000 B#
#235
b100100 J
b100100 >#
b100100 L
b100100 1#
b100100 =#
b100100 D#
#236
0)
#240
1)
#241
b100100 %
b100100 S
b100100 B#
#242
