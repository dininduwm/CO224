$date
	Thu Jun 18 13:33:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbenchCPU $end
$var wire 32 ! INS [31:0] $end
$var wire 32 " tmp_READ_DATA [31:0] $end
$var wire 1 # memWriteEn $end
$var wire 1 $ memReadEn $end
$var wire 1 % insReadEn $end
$var wire 8 & WRITE_DATA [7:0] $end
$var wire 8 ' READ_DATA [7:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 32 ) MAIN_MEM_WRITE_DATA [31:0] $end
$var wire 1 * MAIN_MEM_WRITE $end
$var wire 32 + MAIN_MEM_READ_DATA [31:0] $end
$var wire 1 , MAIN_MEM_READ $end
$var wire 1 - MAIN_MEM_BUSY_WAIT $end
$var wire 6 . MAIN_MEM_ADDRESS [5:0] $end
$var wire 128 / INS_MEM_READ_DATA [127:0] $end
$var wire 1 0 INS_MEM_READ $end
$var wire 1 1 INS_MEM_BUSY_WAIT $end
$var wire 6 2 INS_MEM_ADDRESS [5:0] $end
$var wire 1 3 INS_CACHE_BUSY_WAIT $end
$var wire 1 4 BUSY_WAIT $end
$var wire 8 5 ADDRESS [7:0] $end
$var reg 1 6 CLK $end
$var reg 1 7 RESET $end
$scope module myCacheMemory $end
$var wire 1 6 clock $end
$var wire 1 7 reset $end
$var wire 8 8 writedata [7:0] $end
$var wire 1 # write $end
$var wire 3 9 tag [2:0] $end
$var wire 1 $ read $end
$var wire 2 : offset [1:0] $end
$var wire 3 ; index [2:0] $end
$var wire 8 < address [7:0] $end
$var wire 32 = MAIN_MEM_READ_DATA [31:0] $end
$var wire 1 - MAIN_MEM_BUSY_WAIT $end
$var reg 32 > CURRENT_DATA [31:0] $end
$var reg 1 ? CURRENT_DIRTY $end
$var reg 3 @ CURRENT_TAG [2:0] $end
$var reg 1 A CURRENT_VALID $end
$var reg 6 B MAIN_MEM_ADDRESS [5:0] $end
$var reg 1 , MAIN_MEM_READ $end
$var reg 1 * MAIN_MEM_WRITE $end
$var reg 32 C MAIN_MEM_WRITE_DATA [31:0] $end
$var reg 1 D TAG_MATCH $end
$var reg 1 4 busywait $end
$var reg 2 E next_state [1:0] $end
$var reg 1 F readCache $end
$var reg 1 G readaccess $end
$var reg 8 H readdata [7:0] $end
$var reg 2 I state [1:0] $end
$var reg 8 J tempory_data [7:0] $end
$var reg 1 K writeCache $end
$var reg 1 L writeaccess $end
$var integer 32 M i [31:0] $end
$upscope $end
$scope module myDataMem $end
$var wire 6 N address [5:0] $end
$var wire 1 6 clock $end
$var wire 1 , read $end
$var wire 1 7 reset $end
$var wire 1 * write $end
$var wire 32 O writedata [31:0] $end
$var reg 1 - busywait $end
$var reg 1 P readaccess $end
$var reg 32 Q readdata [31:0] $end
$var reg 1 R writeaccess $end
$var integer 32 S i [31:0] $end
$upscope $end
$scope module myInsCacheMemory $end
$var wire 1 6 clock $end
$var wire 1 7 reset $end
$var wire 3 T tag [2:0] $end
$var wire 1 % read $end
$var wire 2 U offset [1:0] $end
$var wire 3 V index [2:0] $end
$var wire 32 W address [31:0] $end
$var wire 128 X MAIN_MEM_READ_DATA [127:0] $end
$var wire 1 1 MAIN_MEM_BUSY_WAIT $end
$var reg 32 Y CURRENT_DATA [31:0] $end
$var reg 3 Z CURRENT_TAG [2:0] $end
$var reg 1 [ CURRENT_VALID $end
$var reg 6 \ MAIN_MEM_ADDRESS [5:0] $end
$var reg 1 0 MAIN_MEM_READ $end
$var reg 1 ] TAG_MATCH $end
$var reg 1 3 busywait $end
$var reg 2 ^ next_state [1:0] $end
$var reg 1 _ readCache $end
$var reg 1 ` readaccess $end
$var reg 32 a readdata [31:0] $end
$var reg 2 b state [1:0] $end
$var reg 32 c tempory_data [31:0] $end
$var integer 32 d i [31:0] $end
$upscope $end
$scope module myInsMem $end
$var wire 6 e address [5:0] $end
$var wire 1 6 clock $end
$var wire 1 0 read $end
$var reg 1 1 busywait $end
$var reg 1 f readaccess $end
$var reg 128 g readdata [127:0] $end
$upscope $end
$scope module mycpu $end
$var wire 8 h ALOP2 [7:0] $end
$var wire 1 i ANDOUTBEQ $end
$var wire 1 j ANDOUTBNE $end
$var wire 1 4 BUSY_WAIT $end
$var wire 1 6 CLK $end
$var wire 32 k INSTRUCTION [31:0] $end
$var wire 1 3 INS_CACHE_BUSY_WAIT $end
$var wire 8 l MEMREAD [7:0] $end
$var wire 1 7 RESET $end
$var wire 1 m jumpMUXSEL $end
$var wire 1 n regWRITEEN_FIN $end
$var wire 1 o twoscompMUXSEL $end
$var wire 1 p regWRITEEN $end
$var wire 1 # memWriteEn $end
$var wire 1 $ memReadEn $end
$var wire 1 q memMUXSEL $end
$var wire 1 r jump $end
$var wire 1 s immeMUXSEL $end
$var wire 1 t bne $end
$var wire 1 u beq $end
$var wire 2 v bShifterOpCode [1:0] $end
$var wire 1 w alu_shiftMUXSEL $end
$var wire 3 x aluOP [2:0] $end
$var wire 8 y TWOSMUXOUT [7:0] $end
$var wire 8 z TWOSCOMPOUT [7:0] $end
$var wire 8 { SOURCE2 [7:0] $end
$var wire 8 | SOURCE1 [7:0] $end
$var wire 8 } REGSAVE [7:0] $end
$var wire 8 ~ REGOUT2 [7:0] $end
$var wire 8 !" REGOUT1 [7:0] $end
$var wire 8 "" PREV_ALU_BARREL_OUT [7:0] $end
$var wire 32 #" PCNEXT [31:0] $end
$var wire 32 $" PCJUMP [31:0] $end
$var wire 32 %" PCINCBY4 [31:0] $end
$var wire 8 &" DESTINATION [7:0] $end
$var wire 8 '" BARRELOUT [7:0] $end
$var wire 8 (" ALUOUT [7:0] $end
$var wire 1 )" ALUCOMP $end
$var wire 8 *" ALOP1 [7:0] $end
$var reg 32 +" PC [31:0] $end
$var reg 1 % insReadEn $end
$scope module bs $end
$var wire 8 ," INPUT [7:0] $end
$var wire 1 -" TMP7 $end
$var wire 1 ." TMP6 $end
$var wire 1 /" TMP5 $end
$var wire 1 0" TMP4 $end
$var wire 1 1" TMP3 $end
$var wire 1 2" TMP2 $end
$var wire 1 3" TMP1 $end
$var wire 2 4" SHIFT_MODE [1:0] $end
$var wire 8 5" SHIFT [7:0] $end
$var wire 8 6" OUTPUT [7:0] $end
$var wire 8 7" OUTINTER [7:0] $end
$var wire 8 8" INTER2 [7:0] $end
$var wire 8 9" INTER1 [7:0] $end
$var wire 8 :" INNER3 [7:0] $end
$var wire 8 ;" ININTER [7:0] $end
$var reg 8 <" LAYER4_IN [7:0] $end
$var reg 1 =" SHIFT_DIR $end
$scope module inmux $end
$var wire 8 >" INPUT1 [7:0] $end
$var wire 8 ?" INPUT2 [7:0] $end
$var wire 1 =" SELECT $end
$var reg 8 @" RESULT [7:0] $end
$upscope $end
$scope module m0 $end
$var wire 1 A" INPUT1 $end
$var wire 1 B" SELECT $end
$var wire 1 3" INPUT2 $end
$var reg 1 C" RESULT $end
$upscope $end
$scope module m00 $end
$var wire 1 D" INPUT1 $end
$var wire 1 E" SELECT $end
$var wire 1 2" INPUT2 $end
$var reg 1 F" RESULT $end
$upscope $end
$scope module m000 $end
$var wire 1 G" INPUT1 $end
$var wire 1 H" SELECT $end
$var wire 1 0" INPUT2 $end
$var reg 1 I" RESULT $end
$upscope $end
$scope module m0000 $end
$var wire 8 J" INPUT1 [7:0] $end
$var wire 8 K" INPUT2 [7:0] $end
$var wire 1 L" SELECT $end
$var reg 8 M" RESULT [7:0] $end
$upscope $end
$scope module m1 $end
$var wire 1 N" INPUT1 $end
$var wire 1 O" INPUT2 $end
$var wire 1 P" SELECT $end
$var reg 1 Q" RESULT $end
$upscope $end
$scope module m11 $end
$var wire 1 R" INPUT1 $end
$var wire 1 S" SELECT $end
$var wire 1 1" INPUT2 $end
$var reg 1 T" RESULT $end
$upscope $end
$scope module m111 $end
$var wire 1 U" INPUT1 $end
$var wire 1 V" SELECT $end
$var wire 1 /" INPUT2 $end
$var reg 1 W" RESULT $end
$upscope $end
$scope module m2 $end
$var wire 1 X" INPUT1 $end
$var wire 1 Y" INPUT2 $end
$var wire 1 Z" SELECT $end
$var reg 1 [" RESULT $end
$upscope $end
$scope module m22 $end
$var wire 1 \" INPUT1 $end
$var wire 1 ]" INPUT2 $end
$var wire 1 ^" SELECT $end
$var reg 1 _" RESULT $end
$upscope $end
$scope module m222 $end
$var wire 1 `" INPUT1 $end
$var wire 1 a" SELECT $end
$var wire 1 ." INPUT2 $end
$var reg 1 b" RESULT $end
$upscope $end
$scope module m3 $end
$var wire 1 c" INPUT1 $end
$var wire 1 d" INPUT2 $end
$var wire 1 e" SELECT $end
$var reg 1 f" RESULT $end
$upscope $end
$scope module m33 $end
$var wire 1 g" INPUT1 $end
$var wire 1 h" INPUT2 $end
$var wire 1 i" SELECT $end
$var reg 1 j" RESULT $end
$upscope $end
$scope module m333 $end
$var wire 1 k" INPUT1 $end
$var wire 1 l" SELECT $end
$var wire 1 -" INPUT2 $end
$var reg 1 m" RESULT $end
$upscope $end
$scope module m4 $end
$var wire 1 n" INPUT1 $end
$var wire 1 o" INPUT2 $end
$var wire 1 p" SELECT $end
$var reg 1 q" RESULT $end
$upscope $end
$scope module m44 $end
$var wire 1 r" INPUT1 $end
$var wire 1 s" INPUT2 $end
$var wire 1 t" SELECT $end
$var reg 1 u" RESULT $end
$upscope $end
$scope module m444 $end
$var wire 1 v" INPUT1 $end
$var wire 1 w" INPUT2 $end
$var wire 1 x" SELECT $end
$var reg 1 y" RESULT $end
$upscope $end
$scope module m5 $end
$var wire 1 z" INPUT1 $end
$var wire 1 {" INPUT2 $end
$var wire 1 |" SELECT $end
$var reg 1 }" RESULT $end
$upscope $end
$scope module m55 $end
$var wire 1 ~" INPUT1 $end
$var wire 1 !# INPUT2 $end
$var wire 1 "# SELECT $end
$var reg 1 ## RESULT $end
$upscope $end
$scope module m555 $end
$var wire 1 $# INPUT1 $end
$var wire 1 %# INPUT2 $end
$var wire 1 &# SELECT $end
$var reg 1 '# RESULT $end
$upscope $end
$scope module m6 $end
$var wire 1 (# INPUT1 $end
$var wire 1 )# INPUT2 $end
$var wire 1 *# SELECT $end
$var reg 1 +# RESULT $end
$upscope $end
$scope module m66 $end
$var wire 1 ,# INPUT1 $end
$var wire 1 -# INPUT2 $end
$var wire 1 .# SELECT $end
$var reg 1 /# RESULT $end
$upscope $end
$scope module m666 $end
$var wire 1 0# INPUT1 $end
$var wire 1 1# INPUT2 $end
$var wire 1 2# SELECT $end
$var reg 1 3# RESULT $end
$upscope $end
$scope module m7 $end
$var wire 1 4# INPUT1 $end
$var wire 1 5# INPUT2 $end
$var wire 1 6# SELECT $end
$var reg 1 7# RESULT $end
$upscope $end
$scope module m77 $end
$var wire 1 8# INPUT1 $end
$var wire 1 9# INPUT2 $end
$var wire 1 :# SELECT $end
$var reg 1 ;# RESULT $end
$upscope $end
$scope module m777 $end
$var wire 1 <# INPUT1 $end
$var wire 1 =# INPUT2 $end
$var wire 1 ># SELECT $end
$var reg 1 ?# RESULT $end
$upscope $end
$scope module mt1 $end
$var wire 1 @# INPUT1 $end
$var wire 1 A# INPUT2 $end
$var wire 1 B# INPUT3 $end
$var wire 1 C# INPUT4 $end
$var wire 2 D# SELECT [1:0] $end
$var reg 1 3" RESULT $end
$upscope $end
$scope module mt2 $end
$var wire 1 E# INPUT1 $end
$var wire 1 F# INPUT2 $end
$var wire 1 G# INPUT3 $end
$var wire 1 H# INPUT4 $end
$var wire 2 I# SELECT [1:0] $end
$var reg 1 2" RESULT $end
$upscope $end
$scope module mt3 $end
$var wire 1 J# INPUT1 $end
$var wire 1 K# INPUT2 $end
$var wire 1 L# INPUT3 $end
$var wire 1 M# INPUT4 $end
$var wire 2 N# SELECT [1:0] $end
$var reg 1 1" RESULT $end
$upscope $end
$scope module mt4 $end
$var wire 1 O# INPUT1 $end
$var wire 1 P# INPUT2 $end
$var wire 1 Q# INPUT3 $end
$var wire 1 R# INPUT4 $end
$var wire 2 S# SELECT [1:0] $end
$var reg 1 0" RESULT $end
$upscope $end
$scope module mt5 $end
$var wire 1 T# INPUT1 $end
$var wire 1 U# INPUT2 $end
$var wire 1 V# INPUT3 $end
$var wire 1 W# INPUT4 $end
$var wire 2 X# SELECT [1:0] $end
$var reg 1 /" RESULT $end
$upscope $end
$scope module mt6 $end
$var wire 1 Y# INPUT1 $end
$var wire 1 Z# INPUT2 $end
$var wire 1 [# INPUT3 $end
$var wire 1 \# INPUT4 $end
$var wire 2 ]# SELECT [1:0] $end
$var reg 1 ." RESULT $end
$upscope $end
$scope module mt7 $end
$var wire 1 ^# INPUT1 $end
$var wire 1 _# INPUT2 $end
$var wire 1 `# INPUT3 $end
$var wire 1 a# INPUT4 $end
$var wire 2 b# SELECT [1:0] $end
$var reg 1 -" RESULT $end
$upscope $end
$scope module outmux $end
$var wire 8 c# INPUT1 [7:0] $end
$var wire 8 d# INPUT2 [7:0] $end
$var wire 1 =" SELECT $end
$var reg 8 e# RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module jumpadder $end
$var wire 32 f# INPUT2 [31:0] $end
$var wire 32 g# INPUT1 [31:0] $end
$var reg 32 h# RESULT [31:0] $end
$upscope $end
$scope module muMem $end
$var wire 8 i# INPUT2 [7:0] $end
$var wire 1 q SELECT $end
$var wire 8 j# INPUT1 [7:0] $end
$var reg 8 k# RESULT [7:0] $end
$upscope $end
$scope module muxFin $end
$var wire 8 l# INPUT2 [7:0] $end
$var wire 1 w SELECT $end
$var wire 8 m# INPUT1 [7:0] $end
$var reg 8 n# RESULT [7:0] $end
$upscope $end
$scope module muximme $end
$var wire 8 o# INPUT2 [7:0] $end
$var wire 1 s SELECT $end
$var wire 8 p# INPUT1 [7:0] $end
$var reg 8 q# RESULT [7:0] $end
$upscope $end
$scope module muxjump $end
$var wire 32 r# INPUT2 [31:0] $end
$var wire 1 m SELECT $end
$var wire 32 s# INPUT1 [31:0] $end
$var reg 32 t# RESULT [31:0] $end
$upscope $end
$scope module muxtwos $end
$var wire 1 o SELECT $end
$var wire 8 u# INPUT2 [7:0] $end
$var wire 8 v# INPUT1 [7:0] $end
$var reg 8 w# RESULT [7:0] $end
$upscope $end
$scope module myadder $end
$var wire 32 x# INPUT1 [31:0] $end
$var wire 32 y# INPUT2 [31:0] $end
$var reg 32 z# RESULT [31:0] $end
$upscope $end
$scope module myalu $end
$var wire 1 )" COMP $end
$var wire 8 {# DATA1 [7:0] $end
$var wire 8 |# DATA2 [7:0] $end
$var wire 8 }# INTER_AND [7:0] $end
$var wire 8 ~# INTER_FWD [7:0] $end
$var wire 8 !$ INTER_OR [7:0] $end
$var wire 3 "$ SELECT [2:0] $end
$var wire 8 #$ MULRESULT [7:0] $end
$var wire 8 $$ INTER_ADD [7:0] $end
$var reg 8 %$ RESULT [7:0] $end
$scope module mul $end
$var wire 8 &$ DATA1 [7:0] $end
$var wire 8 '$ DATA2 [7:0] $end
$var wire 8 ($ SHIFT7 [7:0] $end
$var wire 8 )$ SHIFT6 [7:0] $end
$var wire 8 *$ SHIFT5 [7:0] $end
$var wire 8 +$ SHIFT4 [7:0] $end
$var wire 8 ,$ SHIFT3 [7:0] $end
$var wire 8 -$ SHIFT2 [7:0] $end
$var wire 8 .$ SHIFT1 [7:0] $end
$var wire 8 /$ SHIFT0 [7:0] $end
$var reg 8 0$ RES0 [7:0] $end
$var reg 8 1$ RES1 [7:0] $end
$var reg 8 2$ RES2 [7:0] $end
$var reg 8 3$ RES3 [7:0] $end
$var reg 8 4$ RES4 [7:0] $end
$var reg 8 5$ RES5 [7:0] $end
$var reg 8 6$ RES6 [7:0] $end
$var reg 8 7$ RES7 [7:0] $end
$var reg 8 8$ RESULT [7:0] $end
$upscope $end
$upscope $end
$scope module mycu $end
$var wire 1 9$ ALUCOMP $end
$var wire 32 :$ INSTRUCTION [31:0] $end
$var wire 1 7 RESET $end
$var reg 3 ;$ aluOP [2:0] $end
$var reg 1 w alu_shiftMUXSEL $end
$var reg 2 <$ bShifterOpCode [1:0] $end
$var reg 1 u beq $end
$var reg 1 t bne $end
$var reg 1 s immeMUXSEL $end
$var reg 1 r jump $end
$var reg 1 q memMUXSEL $end
$var reg 1 $ memReadEn $end
$var reg 1 # memWriteEn $end
$var reg 1 p regWRITEEN $end
$var reg 1 o twoscompMUXSEL $end
$upscope $end
$scope module myreg $end
$var wire 1 6 CLK $end
$var wire 8 =$ IN [7:0] $end
$var wire 3 >$ INADDRESS [2:0] $end
$var wire 8 ?$ OUT1 [7:0] $end
$var wire 3 @$ OUT1ADDRESS [2:0] $end
$var wire 8 A$ OUT2 [7:0] $end
$var wire 3 B$ OUT2ADDRESS [2:0] $end
$var wire 1 7 RESET $end
$var wire 1 n WRITE $end
$var integer 32 C$ i [31:0] $end
$upscope $end
$scope module twos $end
$var wire 8 D$ INPUT [7:0] $end
$var reg 8 E$ RESULT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx E$
bx D$
bx C$
bz B$
bx A$
bz @$
bx ?$
bz >$
bx =$
bx <$
bx ;$
bz :$
z9$
bx 8$
b0 7$
b0 6$
b0 5$
b0 4$
b0 3$
b0 2$
b0 1$
b0 0$
bx /$
bx0 .$
bx00 -$
bx000 ,$
bx0000 +$
bx00000 *$
bx000000 )$
bx0000000 ($
bz '$
bx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bz |#
bx {#
bx z#
b100 y#
b11111111111111111111111111111100 x#
bx w#
bx v#
bx u#
bx t#
bx s#
bx r#
bz q#
bx p#
bz o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bz00 f#
bx e#
bx d#
bx c#
bx b#
0a#
x`#
x_#
0^#
bx ]#
0\#
x[#
xZ#
0Y#
bx X#
0W#
xV#
xU#
0T#
bx S#
0R#
xQ#
xP#
0O#
bx N#
0M#
xL#
xK#
0J#
bx I#
0H#
xG#
xF#
0E#
bx D#
0C#
xB#
xA#
0@#
x?#
z>#
x=#
x<#
x;#
z:#
x9#
x8#
x7#
z6#
x5#
x4#
03#
z2#
01#
x0#
x/#
z.#
x-#
x,#
x+#
z*#
x)#
x(#
0'#
z&#
0%#
x$#
x##
z"#
x!#
x~"
x}"
z|"
x{"
xz"
0y"
zx"
0w"
xv"
xu"
zt"
xs"
xr"
xq"
zp"
xo"
xn"
0m"
zl"
xk"
xj"
zi"
xh"
xg"
xf"
ze"
xd"
xc"
0b"
za"
0`"
0_"
z^"
0]"
x\"
x["
zZ"
xY"
xX"
0W"
zV"
0U"
0T"
zS"
xR"
xQ"
zP"
xO"
xN"
bx M"
xL"
bx K"
bx0000000 J"
0I"
zH"
0G"
0F"
zE"
0D"
0C"
zB"
xA"
bx @"
bx ?"
bx >"
x="
bx <"
bx ;"
bx0000000 :"
bx0 9"
bx000 8"
bx 7"
bx 6"
bz 5"
bx 4"
03"
02"
01"
00"
0/"
0."
0-"
bx ,"
b11111111111111111111111111111100 +"
bz *"
x)"
bx ("
bx '"
bz &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bz |
bz {
bx z
bx y
bx x
xw
bx v
0u
0t
xs
0r
xq
xp
xo
xn
0m
bx l
bz k
0j
0i
bx h
bx g
0f
bx e
b1000 d
bx c
b0 b
bx a
x`
x_
b0 ^
x]
bx \
x[
bx Z
bx Y
bx X
b11111111111111111111111111111100 W
b111 V
b11 U
b111 T
b100000000 S
0R
bx Q
0P
bx O
bx N
b1000 M
0L
xK
bx J
b0 I
bx H
0G
xF
b0 E
xD
bx C
bx B
xA
bx @
x?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
17
16
bx 5
04
03
bx 2
01
x0
bx /
bx .
0-
x,
bx +
x*
bx )
b11111111111111111111111111111100 (
bx '
bx &
0%
0$
0#
bx "
bz !
$end
#10
1)"
b0 :
b0 ;
b0 9
b0 5
b0 <
b0 ("
b0 m#
b0 %$
bz ~#
07
#20
b0 #"
b0 t#
b1000 C$
b0 %"
b0 g#
b0 s#
b0 z#
#30
b0 #$
b0 8$
#40
06
#80
16
#90
00
1`
13
b0 U
b0 V
b0 T
1%
b0 (
b0 W
b0 +"
b0 x#
#100
b1 ^
b0 Y
0[
#109
0_
b0 c
0]
#110
b100 #"
b100 t#
b100 %"
b100 g#
b100 s#
b100 z#
#120
06
#160
1f
11
b0 2
b0 \
b0 e
10
b1 ^
b1 b
0%
16
#200
06
#240
16
#280
06
#320
16
#360
06
#400
16
#440
06
#480
16
#520
06
#560
16
#600
06
#640
16
bx00011001 /
bx00011001 X
bx00011001 g
#680
06
#720
16
#760
06
#800
16
#840
06
#880
16
#920
06
#960
16
#1000
06
#1040
16
bx0000000000011001 /
bx0000000000011001 X
bx0000000000011001 g
#1080
06
#1120
16
#1160
06
#1200
16
#1240
06
#1280
16
#1320
06
#1360
16
#1400
06
#1440
16
bx000001000000000000011001 /
bx000001000000000000011001 X
bx000001000000000000011001 g
#1480
06
#1520
16
#1560
06
#1600
16
#1640
06
#1680
16
#1720
06
#1760
16
#1800
06
#1840
16
bx00000000000001000000000000011001 /
bx00000000000001000000000000011001 X
bx00000000000001000000000000011001 g
#1880
06
#1920
16
#1960
06
#2000
16
#2040
06
#2080
16
#2120
06
#2160
16
#2200
06
#2240
16
bx0010001100000000000001000000000000011001 /
bx0010001100000000000001000000000000011001 X
bx0010001100000000000001000000000000011001 g
#2280
06
#2320
16
#2360
06
#2400
16
#2440
06
#2480
16
#2520
06
#2560
16
#2600
06
#2640
16
bx000000000010001100000000000001000000000000011001 /
bx000000000010001100000000000001000000000000011001 X
bx000000000010001100000000000001000000000000011001 g
#2680
06
#2720
16
#2760
06
#2800
16
#2840
06
#2880
16
#2920
06
#2960
16
#3000
06
#3040
16
bx00000101000000000010001100000000000001000000000000011001 /
bx00000101000000000010001100000000000001000000000000011001 X
bx00000101000000000010001100000000000001000000000000011001 g
#3080
06
#3120
16
#3160
06
#3200
16
#3240
06
#3280
16
#3320
06
#3360
16
#3400
06
#3440
16
bx0000000000000101000000000010001100000000000001000000000000011001 /
bx0000000000000101000000000010001100000000000001000000000000011001 X
bx0000000000000101000000000010001100000000000001000000000000011001 g
#3480
06
#3520
16
#3560
06
#3600
16
#3640
06
#3680
16
#3720
06
#3760
16
#3800
06
#3840
16
bx000001010000000000000101000000000010001100000000000001000000000000011001 /
bx000001010000000000000101000000000010001100000000000001000000000000011001 X
bx000001010000000000000101000000000010001100000000000001000000000000011001 g
#3880
06
#3920
16
#3960
06
#4000
16
#4040
06
#4080
16
#4120
06
#4160
16
#4200
06
#4240
16
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#4280
06
#4320
16
#4360
06
#4400
16
#4440
06
#4480
16
#4520
06
#4560
16
#4600
06
#4640
16
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#4680
06
#4720
16
#4760
06
#4800
16
#4840
06
#4880
16
#4920
06
#4960
16
#5000
06
#5040
16
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#5080
06
#5120
16
#5160
06
#5200
16
#5240
06
#5280
16
#5320
06
#5360
16
#5400
06
#5440
16
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#5480
06
#5520
16
#5560
06
#5600
16
#5640
06
#5680
16
#5720
06
#5760
16
#5800
06
#5840
16
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#5880
06
#5920
16
#5960
06
#6000
16
#6040
06
#6080
16
#6120
06
#6160
16
#6200
06
#6240
16
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#6280
06
#6320
16
#6360
06
#6400
16
#6440
06
#6480
16
#6520
06
#6560
16
#6600
06
#6640
00
b0 b
b1 ^
16
0f
01
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 /
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 X
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 g
#6650
b0 Z
b1000000000000011001 Y
1[
#6659
b0 ^
b1000000000000011001 "
b1000000000000011001 a
1_
b1000000000000011001 c
1]
#6680
06
#6720
0`
0_
03
16
#6730
1`
13
b1 U
1%
b100 (
b100 W
b100 +"
b100 x#
#6749
b1010000000000100011 "
b1010000000000100011 a
1_
b1010000000000100011 c
#6750
b1000 #"
b1000 t#
b1000 %"
b1000 g#
b1000 s#
b1000 z#
#6760
06
#6800
0`
0_
03
0%
16
#6810
1`
13
b10 U
1%
b1000 (
b1000 W
b1000 +"
b1000 x#
#6829
b10000001100000010000000101 "
b10000001100000010000000101 a
1_
b10000001100000010000000101 c
#6830
b1100 #"
b1100 t#
b1100 %"
b1100 g#
b1100 s#
b1100 z#
#6840
06
#6880
0`
0_
03
0%
16
#6890
1`
13
b11 U
1%
b1100 (
b1100 W
b1100 +"
b1100 x#
#6909
b10000000001011010 "
b10000000001011010 a
1_
b10000000001011010 c
#6910
b10000 #"
b10000 t#
b10000 %"
b10000 g#
b10000 s#
b10000 z#
#6920
06
#6960
0`
0_
03
0%
16
#6970
1`
13
b0 U
b1 V
1%
b10000 (
b10000 W
b10000 +"
b10000 x#
#6980
b1 ^
bx Z
b0 Y
0[
#6989
b0 c
0]
#6990
b10100 #"
b10100 t#
b10100 %"
b10100 g#
b10100 s#
b10100 z#
#7000
06
#7040
1f
11
b1 2
b1 \
b1 e
10
b1 ^
b1 b
0%
16
#7080
06
#7120
16
#7160
06
#7200
16
#7240
06
#7280
16
#7320
06
#7360
16
#7400
06
#7440
16
#7480
06
#7520
16
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 /
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 X
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 g
#7560
06
#7600
16
#7640
06
#7680
16
#7720
06
#7760
16
#7800
06
#7840
16
#7880
06
#7920
16
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 /
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 X
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 g
#7960
06
#8000
16
#8040
06
#8080
16
#8120
06
#8160
16
#8200
06
#8240
16
#8280
06
#8320
16
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 /
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 X
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 g
#8360
06
#8400
16
#8440
06
#8480
16
#8520
06
#8560
16
#8600
06
#8640
16
#8680
06
#8720
16
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 /
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 X
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 g
#8760
06
#8800
16
#8840
06
#8880
16
#8920
06
#8960
16
#9000
06
#9040
16
#9080
06
#9120
16
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 /
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 X
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 g
#9160
06
#9200
16
#9240
06
#9280
16
#9320
06
#9360
16
#9400
06
#9440
16
#9480
06
#9520
16
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#9560
06
#9600
16
#9640
06
#9680
16
#9720
06
#9760
16
#9800
06
#9840
16
#9880
06
#9920
16
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#9960
06
#10000
16
#10040
06
#10080
16
#10120
06
#10160
16
#10200
06
#10240
16
#10280
06
#10320
16
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#10360
06
#10400
16
#10440
06
#10480
16
#10520
06
#10560
16
#10600
06
#10640
16
#10680
06
#10720
16
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#10760
06
#10800
16
#10840
06
#10880
16
#10920
06
#10960
16
#11000
06
#11040
16
#11080
06
#11120
16
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#11160
06
#11200
16
#11240
06
#11280
16
#11320
06
#11360
16
#11400
06
#11440
16
#11480
06
#11520
16
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#11560
06
#11600
16
#11640
06
#11680
16
#11720
06
#11760
16
#11800
06
#11840
16
#11880
06
#11920
16
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#11960
06
#12000
16
#12040
06
#12080
16
#12120
06
#12160
16
#12200
06
#12240
16
#12280
06
#12320
16
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#12360
06
#12400
16
#12440
06
#12480
16
#12520
06
#12560
16
#12600
06
#12640
16
#12680
06
#12720
16
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#12760
06
#12800
16
#12840
06
#12880
16
#12920
06
#12960
16
#13000
06
#13040
16
#13080
06
#13120
16
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 /
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 X
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 g
#13160
06
#13200
16
#13240
06
#13280
16
#13320
06
#13360
16
#13400
06
#13440
16
#13480
06
#13520
00
b0 b
b1 ^
16
0f
01
bx00000011000000010000000100000100 /
bx00000011000000010000000100000100 X
bx00000011000000010000000100000100 g
#13530
b0 Z
b11000000010000000100000100 Y
1[
#13539
b0 ^
b11000000010000000100000100 "
b11000000010000000100000100 a
1_
b11000000010000000100000100 c
1]
#13560
06
#13600
0`
0_
03
16
#13610
1`
13
b1 U
1%
b10100 (
b10100 W
b10100 +"
b10100 x#
#13629
bx "
bx a
1_
bx c
#13630
b11000 #"
b11000 t#
b11000 %"
b11000 g#
b11000 s#
b11000 z#
#13640
06
#13680
0`
0_
03
0%
16
#13690
1`
13
b10 U
1%
b11000 (
b11000 W
b11000 +"
b11000 x#
#13709
1_
#13710
b11100 #"
b11100 t#
b11100 %"
b11100 g#
b11100 s#
b11100 z#
#13720
06
#13760
0`
0_
03
0%
16
#13770
1`
13
b11 U
1%
b11100 (
b11100 W
b11100 +"
b11100 x#
#13789
1_
#13790
b100000 #"
b100000 t#
b100000 %"
b100000 g#
b100000 s#
b100000 z#
#13800
06
#13840
0`
0_
03
0%
16
#13850
1`
13
b0 U
b10 V
1%
b100000 (
b100000 W
b100000 +"
b100000 x#
#13860
b1 ^
bx Z
b0 Y
0[
#13869
b0 c
0]
#13870
b100100 #"
b100100 t#
b100100 %"
b100100 g#
b100100 s#
b100100 z#
#13880
06
#13920
1f
11
b10 2
b10 \
b10 e
10
b1 ^
b1 b
0%
16
#13960
06
#14000
16
#14040
06
#14080
16
#14120
06
#14160
16
#14200
06
#14240
16
#14280
06
#14320
16
#14360
06
#14400
16
bx000000110000000100000001xxxxxxxx /
bx000000110000000100000001xxxxxxxx X
bx000000110000000100000001xxxxxxxx g
#14440
06
#14480
16
#14520
06
#14560
16
#14600
06
#14640
16
#14680
06
#14720
16
#14760
06
#14800
16
bx0000001100000001xxxxxxxxxxxxxxxx /
bx0000001100000001xxxxxxxxxxxxxxxx X
bx0000001100000001xxxxxxxxxxxxxxxx g
#14840
06
#14880
16
#14920
06
#14960
16
#15000
06
#15040
16
#15080
06
#15120
16
#15160
06
#15200
16
bx00000011xxxxxxxxxxxxxxxxxxxxxxxx /
bx00000011xxxxxxxxxxxxxxxxxxxxxxxx X
bx00000011xxxxxxxxxxxxxxxxxxxxxxxx g
#15240
06
#15280
16
#15320
06
#15360
16
#15400
06
#15440
16
#15480
06
#15520
16
#15560
06
#15600
16
bx /
bx X
bx g
#15640
06
#15680
16
#15720
06
#15760
16
#15800
06
#15840
16
#15880
06
#15920
16
#15960
06
#16000
16
#16040
06
#16080
16
#16120
06
#16160
16
#16200
06
#16240
16
#16280
06
#16320
16
#16360
06
#16400
16
#16440
06
#16480
16
#16520
06
#16560
16
#16600
06
#16640
16
#16680
06
#16720
16
#16760
06
#16800
16
#16840
06
#16880
16
#16920
06
#16960
16
#17000
06
#17040
16
#17080
06
#17120
16
#17160
06
#17200
16
#17240
06
#17280
16
#17320
06
#17360
16
#17400
06
#17440
16
#17480
06
#17520
16
#17560
06
#17600
16
#17640
06
#17680
16
#17720
06
#17760
16
#17800
06
#17840
16
#17880
06
#17920
16
#17960
06
#18000
16
#18040
06
#18080
16
#18120
06
#18160
16
#18200
06
#18240
16
#18280
06
#18320
16
#18360
06
#18400
16
#18440
06
#18480
16
#18520
06
#18560
16
#18600
06
#18640
16
#18680
06
#18720
16
#18760
06
#18800
16
#18840
06
#18880
16
#18920
06
#18960
16
#19000
06
#19040
16
#19080
06
#19120
16
#19160
06
#19200
16
#19240
06
#19280
16
#19320
06
#19360
16
#19400
06
#19440
16
#19480
06
#19520
16
#19560
06
#19600
16
#19640
06
#19680
16
#19720
06
#19760
16
#19800
06
#19840
16
#19880
06
#19920
16
#19960
06
#20000
16
#20040
06
#20080
16
#20120
06
#20160
16
#20200
06
#20240
16
#20280
06
#20320
16
#20360
06
#20400
00
b0 b
b1 ^
16
0f
01
#20410
b0 Z
bx Y
1[
#20419
b0 ^
1_
bx c
1]
#20420
