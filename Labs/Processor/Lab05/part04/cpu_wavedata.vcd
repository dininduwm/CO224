$date
	Thu May 14 13:29:13 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbenchCPU $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INS [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 8 % ALOP2 [7:0] $end
$var wire 1 # CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' twoscompMUXSEL $end
$var wire 1 ( regWRITEEN $end
$var wire 1 ) jump $end
$var wire 1 * immeMUXSEL $end
$var wire 3 + aluOP [2:0] $end
$var wire 8 , TWOSMUXOUT [7:0] $end
$var wire 8 - TWOSCOMPOUT [7:0] $end
$var wire 8 . SOURCE2 [7:0] $end
$var wire 8 / SOURCE1 [7:0] $end
$var wire 8 0 REGOUT2 [7:0] $end
$var wire 8 1 REGOUT1 [7:0] $end
$var wire 32 2 PCNEXT [31:0] $end
$var wire 32 3 PCJUMP [31:0] $end
$var wire 32 4 PCINCBY4 [31:0] $end
$var wire 8 5 OP [7:0] $end
$var wire 8 6 DESTINATION [7:0] $end
$var wire 8 7 ALUOUT [7:0] $end
$var wire 1 8 ALUCOMP $end
$var wire 8 9 ALOP1 [7:0] $end
$var reg 32 : PC [31:0] $end
$scope module jumpadder $end
$var wire 32 ; INPUT2 [31:0] $end
$var wire 32 < INPUT1 [31:0] $end
$var reg 32 = RESULT [31:0] $end
$upscope $end
$scope module muximme $end
$var wire 8 > INPUT2 [7:0] $end
$var wire 1 * SELECT $end
$var wire 8 ? INPUT1 [7:0] $end
$var reg 8 @ RESULT [7:0] $end
$upscope $end
$scope module muxjump $end
$var wire 32 A INPUT2 [31:0] $end
$var wire 1 ) SELECT $end
$var wire 32 B INPUT1 [31:0] $end
$var reg 32 C RESULT [31:0] $end
$upscope $end
$scope module muxtwos $end
$var wire 1 ' SELECT $end
$var wire 8 D INPUT2 [7:0] $end
$var wire 8 E INPUT1 [7:0] $end
$var reg 8 F RESULT [7:0] $end
$upscope $end
$scope module myadder $end
$var wire 32 G INPUT1 [31:0] $end
$var wire 32 H INPUT2 [31:0] $end
$var reg 32 I RESULT [31:0] $end
$upscope $end
$scope module myalu $end
$var wire 1 8 COMP $end
$var wire 8 J DATA1 [7:0] $end
$var wire 8 K DATA2 [7:0] $end
$var wire 3 L SELECT [2:0] $end
$var reg 8 M RESULT [7:0] $end
$upscope $end
$scope module mycu $end
$var wire 1 8 ALUCOMP $end
$var wire 8 N OP [7:0] $end
$var wire 1 $ RESET $end
$var reg 3 O aluOP [2:0] $end
$var reg 1 * immeMUXSEL $end
$var reg 1 ) jump $end
$var reg 1 ( regWRITEEN $end
$var reg 1 ' twoscompMUXSEL $end
$upscope $end
$scope module myreg $end
$var wire 1 # CLK $end
$var wire 8 P IN [7:0] $end
$var wire 3 Q INADDRESS [2:0] $end
$var wire 8 R OUT1 [7:0] $end
$var wire 3 S OUT1ADDRESS [2:0] $end
$var wire 8 T OUT2 [7:0] $end
$var wire 3 U OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$var integer 32 V i [31:0] $end
$upscope $end
$scope module twos $end
$var wire 8 W INPUT [7:0] $end
$var reg 8 X RESULT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
b100 H
b11111111111111111111111111111100 G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx00 ;
b11111111111111111111111111111100 :
bx 9
x8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
0)
x(
x'
bx &
bx %
1$
1#
bx "
b11111111111111111111111111111100 !
$end
#1
0$
#2
b0 2
b0 C
b1000 V
b0 4
b0 <
b0 B
b0 I
#7
0#
#14
1#
#15
b0 !
b0 :
b0 G
#17
18
b0 S
b0 7
b0 M
b0 P
b0 Q
b0 /
b1010 9
b1010 @
b1010 K
b10 U
b100 2
b100 C
b0 ;
b0 6
b1010 .
b1010 >
b101 5
b101 N
b100 4
b100 <
b100 B
b100 I
b101000000000000000000001010 "
b101000000000000000000001010 &
#18
b0 +
b0 L
b0 O
1(
1*
0'
#19
08
b0 ,
b0 ?
b0 F
b0 -
b0 D
b0 X
b1010 7
b1010 M
b1010 P
b0 %
b0 J
b0 1
b0 R
b0 0
b0 E
b0 T
b0 W
b100 3
b100 =
b100 A
#21
0#
#28
1#
#29
b100 !
b100 :
b100 G
#31
b11 Q
b11110 9
b11110 @
b11110 K
b110 U
b1000 2
b1000 C
b1100 ;
b11 6
b11110 .
b11110 >
b1000 4
b1000 <
b1000 B
b1000 I
b101000000110000000000011110 "
b101000000110000000000011110 &
#32
b11110 7
b11110 M
b11110 P
b1010 %
b1010 J
b1010 1
b1010 R
#33
b10100 3
b10100 =
b10100 A
#35
0#
#42
1#
#43
b1000 !
b1000 :
b1000 G
#45
b1 Q
b101 9
b101 @
b101 K
b101 U
b1100 2
b1100 C
b100 ;
b1 6
b101 .
b101 >
b1100 4
b1100 <
b1100 B
b1100 I
b101000000010000000000000101 "
b101000000010000000000000101 &
#46
b101 7
b101 M
b101 P
#47
b10000 3
b10000 =
b10000 A
#49
0#
#56
1#
#57
b1100 !
b1100 :
b1100 G
#59
b0 Q
b1 9
b1 @
b1 K
b1 U
b10000 2
b10000 C
b0 ;
b0 6
b1 .
b1 >
b0 5
b0 N
b10000 4
b10000 <
b10000 B
b10000 I
b1 "
b1 &
#60
18
b0 9
b0 @
b0 K
b1 7
b1 M
b1 P
b1 +
b1 L
b1 O
0*
#61
b101 9
b101 @
b101 K
b101 ,
b101 ?
b101 F
b11111011 -
b11111011 D
b11111011 X
b101 0
b101 E
b101 T
b101 W
#62
08
b1111 7
b1111 M
b1111 P
#63
0#
#70
1#
#71
b10000 !
b10000 :
b10000 G
#73
b1 Q
b11 U
b10100 2
b10100 C
b100 ;
b1 6
b11 .
b11 >
b111 5
b111 N
b10100 4
b10100 <
b10100 B
b10100 I
b111000000010000000000000011 "
b111000000010000000000000011 &
#74
b11111011 9
b11111011 @
b11111011 K
b11111011 ,
b11111011 ?
b11111011 F
0(
1'
b1111 %
b1111 J
b1111 1
b1111 R
#75
b11100010 9
b11100010 @
b11100010 K
b11100010 ,
b11100010 ?
b11100010 F
b11100010 -
b11100010 D
b11100010 X
b11110 0
b11110 E
b11110 T
b11110 W
b11000 3
b11000 =
b11000 A
#76
08
b11110001 7
b11110001 M
b11110001 P
#77
0#
#84
1#
#85
b10100 !
b10100 :
b10100 G
#87
b101 Q
b0 U
b11000 2
b11000 C
b11111111111111111111111111110100 ;
b11111101 6
b0 .
b0 >
b110 5
b110 N
b11000 4
b11000 <
b11000 B
b11000 I
b110111111010000000000000000 "
b110111111010000000000000000 &
#88
1)
#89
b11110001 9
b11110001 @
b11110001 K
b11110001 ,
b11110001 ?
b11110001 F
b11110001 -
b11110001 D
b11110001 X
b1100 2
b1100 C
b1111 0
b1111 E
b1111 T
b1111 W
b1100 3
b1100 =
b1100 A
#91
18
b0 7
b0 M
b0 P
0#
#98
1#
#99
b1100 !
b1100 :
b1100 G
#101
b0 Q
b1 U
b0 ;
b0 6
b1 .
b1 >
b0 5
b0 N
b10000 4
b10000 <
b10000 B
b10000 I
b1 "
b1 &
#102
b1111 9
b1111 @
b1111 K
b10000 2
b10000 C
b1111 ,
b1111 ?
b1111 F
0)
1(
0'
#103
b101 9
b101 @
b101 K
b101 ,
b101 ?
b101 F
b11111011 -
b11111011 D
b11111011 X
b101 0
b101 E
b101 T
b101 W
b10000 3
b10000 =
b10000 A
#104
08
b10100 7
b10100 M
b10100 P
#105
0#
#112
1#
#113
b10000 !
b10000 :
b10000 G
#115
b1 Q
b11 U
b10100 2
b10100 C
b100 ;
b1 6
b11 .
b11 >
b111 5
b111 N
b10100 4
b10100 <
b10100 B
b10100 I
b111000000010000000000000011 "
b111000000010000000000000011 &
#116
b11111011 9
b11111011 @
b11111011 K
b11111011 ,
b11111011 ?
b11111011 F
0(
1'
b10100 %
b10100 J
b10100 1
b10100 R
#117
b11100010 9
b11100010 @
b11100010 K
b11100010 ,
b11100010 ?
b11100010 F
b11100010 -
b11100010 D
b11100010 X
b11110 0
b11110 E
b11110 T
b11110 W
b11000 3
b11000 =
b11000 A
#118
b11110110 7
b11110110 M
b11110110 P
#119
0#
#126
1#
#127
b10100 !
b10100 :
b10100 G
#129
b101 Q
b0 U
b11000 2
b11000 C
b11111111111111111111111111110100 ;
b11111101 6
b0 .
b0 >
b110 5
b110 N
b11000 4
b11000 <
b11000 B
b11000 I
b110111111010000000000000000 "
b110111111010000000000000000 &
#130
1)
#131
b11101100 9
b11101100 @
b11101100 K
b11101100 ,
b11101100 ?
b11101100 F
b11101100 -
b11101100 D
b11101100 X
b1100 2
b1100 C
b10100 0
b10100 E
b10100 T
b10100 W
b1100 3
b1100 =
b1100 A
#133
18
b0 7
b0 M
b0 P
0#
#140
1#
#141
b1100 !
b1100 :
b1100 G
#143
b0 Q
b1 U
b0 ;
b0 6
b1 .
b1 >
b0 5
b0 N
b10000 4
b10000 <
b10000 B
b10000 I
b1 "
b1 &
#144
b10100 9
b10100 @
b10100 K
b10000 2
b10000 C
b10100 ,
b10100 ?
b10100 F
0)
1(
0'
#145
b101 9
b101 @
b101 K
b101 ,
b101 ?
b101 F
b11111011 -
b11111011 D
b11111011 X
b101 0
b101 E
b101 T
b101 W
b10000 3
b10000 =
b10000 A
#146
08
b11001 7
b11001 M
b11001 P
#147
0#
#154
1#
#155
b10000 !
b10000 :
b10000 G
#157
b1 Q
b11 U
b10100 2
b10100 C
b100 ;
b1 6
b11 .
b11 >
b111 5
b111 N
b10100 4
b10100 <
b10100 B
b10100 I
b111000000010000000000000011 "
b111000000010000000000000011 &
#158
b11111011 9
b11111011 @
b11111011 K
b11111011 ,
b11111011 ?
b11111011 F
0(
1'
b11001 %
b11001 J
b11001 1
b11001 R
#159
b11100010 9
b11100010 @
b11100010 K
b11100010 ,
b11100010 ?
b11100010 F
b11100010 -
b11100010 D
b11100010 X
b11110 0
b11110 E
b11110 T
b11110 W
b11000 3
b11000 =
b11000 A
#160
b11111011 7
b11111011 M
b11111011 P
#161
0#
#168
1#
#169
b10100 !
b10100 :
b10100 G
#171
b101 Q
b0 U
b11000 2
b11000 C
b11111111111111111111111111110100 ;
b11111101 6
b0 .
b0 >
b110 5
b110 N
b11000 4
b11000 <
b11000 B
b11000 I
b110111111010000000000000000 "
b110111111010000000000000000 &
#172
1)
#173
b11100111 9
b11100111 @
b11100111 K
b11100111 ,
b11100111 ?
b11100111 F
b11100111 -
b11100111 D
b11100111 X
b1100 2
b1100 C
b11001 0
b11001 E
b11001 T
b11001 W
b1100 3
b1100 =
b1100 A
#175
18
b0 7
b0 M
b0 P
0#
#182
1#
#183
b1100 !
b1100 :
b1100 G
#185
b0 Q
b1 U
b0 ;
b0 6
b1 .
b1 >
b0 5
b0 N
b10000 4
b10000 <
b10000 B
b10000 I
b1 "
b1 &
#186
b11001 9
b11001 @
b11001 K
b10000 2
b10000 C
b11001 ,
b11001 ?
b11001 F
0)
1(
0'
#187
b101 9
b101 @
b101 K
b101 ,
b101 ?
b101 F
b11111011 -
b11111011 D
b11111011 X
b101 0
b101 E
b101 T
b101 W
b10000 3
b10000 =
b10000 A
#188
08
b11110 7
b11110 M
b11110 P
#189
0#
#196
1#
#197
b10000 !
b10000 :
b10000 G
#199
b1 Q
b11 U
b10100 2
b10100 C
b100 ;
b1 6
b11 .
b11 >
b111 5
b111 N
b10100 4
b10100 <
b10100 B
b10100 I
b111000000010000000000000011 "
b111000000010000000000000011 &
#200
b11111011 9
b11111011 @
b11111011 K
b11111011 ,
b11111011 ?
b11111011 F
0(
1'
b11110 %
b11110 J
b11110 1
b11110 R
#201
b11100010 9
b11100010 @
b11100010 K
b11100010 ,
b11100010 ?
b11100010 F
b11100010 -
b11100010 D
b11100010 X
b11110 0
b11110 E
b11110 T
b11110 W
b11000 3
b11000 =
b11000 A
#202
18
b0 7
b0 M
b0 P
#203
b11000 2
b11000 C
1)
0#
#210
1#
#211
b11000 !
b11000 :
b11000 G
#213
bx S
bx Q
bx /
bx U
bx00 ;
bx 6
bx .
bx >
bx 5
bx N
b11100 4
b11100 <
b11100 B
b11100 I
bx "
bx &
#215
bx 9
bx @
bx K
bx ,
bx ?
bx F
bx -
bx D
bx X
bx 2
bx C
bx %
bx J
bx 1
bx R
bx 0
bx E
bx T
bx W
bx 3
bx =
bx A
#217
x8
bx 7
bx M
bx P
0#
#224
1#
#225
bx !
bx :
bx G
#227
bx 4
bx <
bx B
bx I
#231
0#
#238
1#
#242
